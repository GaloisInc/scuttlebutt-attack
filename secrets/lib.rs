#![no_std]

#[path = "../src/comm_trace_types.rs"] pub mod comm_trace_types;
use crate::comm_trace_types::{Event, EventKind, Channel, Thread};
use crate::comm_trace_types::{NUM_EVENTS, NUM_CHANNELS, NUM_THREADS, NUM_DATA_BYTES};

#[no_mangle]
#[link_section = ".rodata.secret.ssb_events"]
pub static CC_SSB_EVENTS: [Event; NUM_EVENTS] = [
  Event { thread_id: 1, channel_id: 1, kind: EventKind::Send, range: 0 .. 64, next_event_for_thread: 3 },
  Event { thread_id: 0, channel_id: 1, kind: EventKind::Recv, range: 0 .. 64, next_event_for_thread: 2 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Send, range: 176 .. 240, next_event_for_thread: 5 },
  Event { thread_id: 1, channel_id: 0, kind: EventKind::Recv, range: 176 .. 240, next_event_for_thread: 4 },
  Event { thread_id: 1, channel_id: 1, kind: EventKind::Send, range: 64 .. 176, next_event_for_thread: 7 },
  Event { thread_id: 0, channel_id: 1, kind: EventKind::Recv, range: 64 .. 176, next_event_for_thread: 6 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Send, range: 240 .. 320, next_event_for_thread: 8 },
  Event { thread_id: 1, channel_id: 0, kind: EventKind::Recv, range: 240 .. 320, next_event_for_thread: 8 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
  Event { thread_id: 0, channel_id: 0, kind: EventKind::Recv, range: 0 .. 0, next_event_for_thread: 0 },
];

#[no_mangle]
#[link_section = ".rodata.secret.ssb_num_valid_events"]
pub static CC_SSB_NUM_VALID_EVENTS: usize = 8;

#[no_mangle]
#[link_section = ".rodata.secret.ssb_channels"]
pub static CC_SSB_CHANNELS: [Channel; NUM_CHANNELS] = [
  Channel { start: 176 },
  Channel { start: 0 },
];

#[no_mangle]
#[link_section = ".rodata.secret.ssb_threads"]
pub static CC_SSB_THREADS: [Thread; NUM_THREADS] = [
  Thread { first_event: 1 },
  Thread { first_event: 0 },
];

#[no_mangle]
#[link_section = ".rodata.secret.ssb_data"]
pub static CC_SSB_DATA: [u8; NUM_DATA_BYTES] = [
  0xf1, 0x42, 0x38, 0x95, 0xf9, 0x11, 0xb4, 0xc1, 0x6e, 0xd8, 0x7c, 0x47, 0x55, 0xef, 0x17, 0x6a,
  0x97, 0xec, 0x9f, 0x80, 0xd4, 0x16, 0x43, 0xec, 0x6f, 0x07, 0xb4, 0xf0, 0x1a, 0xe2, 0x37, 0xec,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xef, 0xad, 0xa1, 0x26, 0x6c, 0xc6, 0xab, 0x86, 0x32, 0x04, 0x01, 0xa9, 0x06, 0x9d, 0x59, 0x2d,
  0xe8, 0xf2, 0x58, 0xe8, 0x8e, 0xe7, 0x8b, 0xae, 0x40, 0x3f, 0x71, 0xc9, 0x61, 0x58, 0xd0, 0x28,
  0xc7, 0x08, 0x84, 0x81, 0x4e, 0xa6, 0xf8, 0xcd, 0x3c, 0xc2, 0xa8, 0x70, 0x71, 0x7f, 0x8d, 0xc4,
  0xe4, 0xfa, 0xf1, 0x4f, 0xb1, 0xfd, 0x87, 0x11, 0x56, 0xe5, 0x38, 0x31, 0x27, 0x88, 0xbc, 0x84,
  0x49, 0x01, 0x68, 0x59, 0x7a, 0x3e, 0x1a, 0x74, 0xda, 0xd2, 0x0e, 0x8d, 0x5d, 0x0b, 0xe9, 0xcf,
  0x67, 0x3d, 0x0f, 0xc9, 0x9d, 0x3f, 0x6a, 0xe5, 0x51, 0x49, 0x16, 0xc5, 0x6c, 0xe1, 0x7f, 0x6c,
  0x6e, 0x33, 0xe5, 0x74, 0x55, 0x93, 0x35, 0x1b, 0x25, 0x2d, 0xad, 0x30, 0x50, 0xfd, 0x9c, 0x59,
  0xbf, 0x68, 0xd9, 0x68, 0xa0, 0xbb, 0x2b, 0xb9, 0x93, 0x8c, 0x1a, 0xb3, 0x23, 0xc0, 0x6b, 0xc2,
  0x5c, 0x45, 0xbb, 0x70, 0xee, 0x38, 0x6c, 0x4a, 0x57, 0xe2, 0xa7, 0x66, 0xaf, 0xd2, 0x1e, 0xd2,
  0xcd, 0x47, 0xc2, 0xb6, 0x5b, 0xb5, 0x74, 0xc6, 0x23, 0xf2, 0xf9, 0x3c, 0x28, 0xc0, 0xb4, 0x37,
  0xb5, 0xe7, 0xc5, 0x9f, 0x6d, 0x71, 0xb3, 0xf3, 0xa1, 0x14, 0xc5, 0xbc, 0x37, 0x6a, 0xe5, 0x77,
  0x9f, 0x45, 0xf7, 0x81, 0x20, 0x04, 0xb4, 0xc9, 0x99, 0x53, 0x30, 0xac, 0xc6, 0xa6, 0xb4, 0x53,
  0x7e, 0x21, 0x29, 0x7e, 0x74, 0xaa, 0x10, 0xe2, 0xb0, 0x89, 0xbc, 0x18, 0x1f, 0xcd, 0x6e, 0x58,
  0xb0, 0xba, 0xc3, 0x31, 0xb3, 0xe4, 0xa5, 0x4f, 0x8a, 0x87, 0x49, 0x11, 0x87, 0xa6, 0xc5, 0x7a,
  0xcf, 0x29, 0xdd, 0xb0, 0x53, 0x29, 0x4c, 0x97, 0xe5, 0x63, 0xaf, 0x31, 0xc1, 0xeb, 0xd4, 0x79,
  0x5b, 0x3d, 0x57, 0x29, 0x0a, 0x73, 0xf2, 0x47, 0x30, 0x21, 0xfc, 0x58, 0xef, 0xa0, 0x1a, 0xbc,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];
